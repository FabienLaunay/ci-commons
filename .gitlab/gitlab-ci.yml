stages:
  - lint
  - build

Lint-ci-commons-project:
  stage: lint
  rules:
    # Trigger on push to main branch
    - if: '$CI_PROJECT_NAME == "ci-commons" && $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == "main"'
  # Trigger on merge request to main branch
    - if: '$CI_PROJECT_NAME == "ci-commons" && $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main"'
  image:
    name: python:3.9-slim
    entrypoint: [""]
  before_script:
    - bash bsh/lintCiCommonsProjectBeforeScript.bash "git"
  script:
    - |
      if [[ "$CI_COMMIT_BRANCH" == "main" ]]; then
        bash bsh/lintCiCommonsProjectScript.bash \
          "$CI_COMMIT_BEFORE_SHA" \
          "$CI_COMMIT_SHA" 
      elif [[ "$CI_MERGE_REQUEST_TARGET_BRANCH_NAME" == "main" ]]; then
        bash bsh/lintCiCommonsProjectScript.bash \
          "$CI_MERGE_REQUEST_DIFF_BASE_SHA" \
          "$CI_COMMIT_SHA"        
      fi

Lint:
  stage: lint
  rules:
    # Trigger on push to main branch
    #- if: '$CI_PROJECT_NAME != "ci-commons" && $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == "main"'
    # Trigger on merge request to main branch
    - if: '$CI_PROJECT_NAME != "ci-commons" && $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main"'

  image:
    name: python:3.9-slim
    entrypoint: [""]
  before_script:
     - apt-get update
     - apt-get install --yes "curl unzip"
  script:
    - |
      mkdir -p bsh
      curl \
        --verbose \
        --location \
        --header "PRIVATE-TOKEN: $CI_PERSONAL_ACCESS_TOKEN" \
        --output bsh/lintCiCommonsProjectBeforeScript.bash \
          https://gitlab.com/fabien.launay.private/ci-commons/-/raw/main/bsh/lintCiCommonsProjectBeforeScript.bash
      curl \
        --verbose \
        --location \
        --header "PRIVATE-TOKEN: $CI_PERSONAL_ACCESS_TOKEN" \
        --output bsh/lintCiCommonsProjectScript.bash \
          https://gitlab.com/fabien.launay.private/ci-commons/-/raw/main/bsh/lintCiCommonsProjectScript.bash
      mkdir -p bsh/utilities
      curl \
        --verbose \
        --location \
        --header "PRIVATE-TOKEN: $CI_PERSONAL_ACCESS_TOKEN" \
        --output bsh/utilities/format.bash \
          https://gitlab.com/fabien.launay.private/ci-commons/-/raw/main/bsh/utilities/format.bash
      curl \
        --verbose \
        --location \
        --header "PRIVATE-TOKEN: $CI_PERSONAL_ACCESS_TOKEN" \
        --output bsh/utilities/message.bash \
          https://gitlab.com/fabien.launay.private/ci-commons/-/raw/main/bsh/utilities/message.bash
      curl \
        --verbose \
        --location \
        --header "PRIVATE-TOKEN: $CI_PERSONAL_ACCESS_TOKEN" \
        --output bsh/utilities/strings.bash \
          https://gitlab.com/fabien.launay.private/ci-commons/-/raw/main/bsh/utilities/strigs.bash
      mkdir -p cfg/gitlint
      curl \
        --verbose \
        --location \
        --header "PRIVATE-TOKEN: $CI_PERSONAL_ACCESS_TOKEN" \
        --output cfg/gitlint/gitlint.cfg \
          https://gitlab.com/fabien.launay.private/ci-commons/-/raw/main/cfg/gitlint/gitlint.cfg
      mkdir -p cfg/gitlint/rules
      curl \
        --verbose \
        --location \
        --header "PRIVATE-TOKEN: $CI_PERSONAL_ACCESS_TOKEN" \
        --output cfg/gitlint/gitlint.cfg \
          https://gitlab.com/fabien.launay.private/ci-commons/-/raw/main/cfg/gitlint/rules/TitleImperativeMood.py
      curl \
        --verbose \
        --location \
        --header "PRIVATE-TOKEN: $CI_PERSONAL_ACCESS_TOKEN" \
        --output cfg/gitlint/gitlint.cfg \
          https://gitlab.com/fabien.launay.private/ci-commons/-/raw/main/cfg/gitlint/rules/TitleVerbCapitalized.py
      mkdir -p cfg/gitlint/txt
      curl \
        --verbose \
        --location \
        --header "PRIVATE-TOKEN: $CI_PERSONAL_ACCESS_TOKEN" \
        --output cfg/gitlint/gitlint.cfg \
          https://gitlab.com/fabien.launay.private/ci-commons/-/raw/main/cfg/gitlint/txt/Verbs.txt
      ls -la
      bash bsh/lintCiCommonsProjectScript.bash \
        "$CI_MERGE_REQUEST_DIFF_BASE_SHA" \
        "$CI_COMMIT_SHA"

Generate-artifacts:
  stage: build
  rules:
    # Trigger on push to main branch
    - if: '$CI_PROJECT_NAME == "ci-commons" && $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == "main"'
    # Trigger on merge request to main branch
    - if: '$CI_PROJECT_NAME == "ci-commons" && $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main"'
  script:
    - echo "Generating artifacts..."
  artifacts:
    paths:
      - cfg/gitlint/

